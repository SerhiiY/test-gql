{"version":3,"sources":["components/GuestReviewsPopup/styles.module.scss","components/common/ModalWindow/styles.module.scss","components/GuestReviewsPopup/components/styles.module.scss","components/common/ModalWindow/ModalWindow.jsx","components/GuestReviewsPopup/api/queries/index.js","gql/mocks.js","hooks/useFakeQuery.js","components/GuestReviewsPopup/components/QuestionsList.jsx","components/GuestReviewsPopup/GuestReviewsPopup.jsx","components/GuestReviewsPopup/helpers.js","components/MainPage/MainPage.jsx","components/App/routes.js","components/App/App.jsx","services/serviceWorker.js","redux/appReducer.js","redux/types.js","redux/dataReducer.js","redux/rootReducer.js","redux/actions.js","redux/sagas.js","redux/store.js","gql/client.js","index.js"],"names":["module","exports","ModalWindow","isOpen","onClose","headerTitle","children","isLoading","error","Modal","show","onHide","className","styles","modal","wrapper","cross","size","onClick","Header","modalHeader","Body","modalBody","Spinner","animation","variant","GET_GUEST_REVIEWS","gql","request","query","variables","result","guestReviewsList","name","date","Date","toISOString","rate","travelingType","questions","question","answer","useFakeQuery","useState","loading","setLoading","setError","data","setData","setTimeout","mocks","QuestionsList","map","index","key","section","Row","GuestReviewsPopup","dataReviews","Container","container","review","reviewContainer","Col","xs","rateBlock","parseFloat","getRating","moment","format","guestSection","type","MainPage","isPopupOpen","setIsPopupOpen","togglePopup","fluid","md","Button","App","props","exact","path","routes","component","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","initialState","reviewsLoader","reviewsPopup","dataReducer","action","isPopup","undefined","payload","isLoader","reviews","rootReducer","combineReducers","app","appReducer","toggleReviewsLoader","sagaWatcher","sagaWorker","takeEvery","put","call","fetchReviews","a","saga","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","client","ApolloClient","uri","process","APOLLO_CLIENT_URI","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,UAAY,0BAA0B,gBAAkB,gCAAgC,KAAO,qBAAqB,aAAe,+B,mBCAvND,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,UAAY,0BAA0B,YAAc,4BAA4B,gBAAgB,gC,mBCA9KD,EAAOC,QAAU,CAAC,QAAU,0B,8KCkCbC,EA7BK,SAAC,GAAD,QAClBC,cADkB,aAElBC,eAFkB,MAER,aAFQ,EAGlBC,EAHkB,EAGlBA,YAAaC,EAHK,EAGLA,SAAUC,EAHL,EAGKA,UAAWC,EAHhB,EAGgBA,MAHhB,OAKlB,kBAACC,EAAA,EAAD,CACEC,KAAMP,EACNQ,OAAQP,EACRQ,UAAS,6CAAwCC,IAAOC,QAExD,yBAAKF,UAAWC,IAAOE,SACrB,kBAAC,IAAD,CAAGH,UAAWC,IAAOG,MAAOC,KAAM,GAAIC,QAASd,IAC9CC,GACC,kBAACI,EAAA,EAAMU,OAAP,CAAcP,UAAS,2BAAsBC,IAAOO,cACjDf,GAGL,kBAACI,EAAA,EAAMY,KAAP,CAAYT,UAAWC,IAAOS,WAC3Bf,EACG,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YAClCjB,EACJ,uBAAGI,UAAU,OAAb,2BAA4CJ,EAA5C,KACIF,M,6OC1BP,IAAMoB,E,MAAoBC,GAAH,KCAf,GACb,CACEC,QAAS,CACPC,MAAOH,EACPI,UAAW,IAEbC,OAAQ,CACNC,iBAAkB,CAChB,CACEC,KAAM,OACNC,KAAM,IAAIC,KAAK,cAAcC,cAC7BC,KAAM,IACNC,cAAe,kBACfC,UAAW,CACT,CACEC,SAAU,0BACVC,OAAQ,6BAEV,CACED,SAAU,sCACVC,OAAQ,oCAId,CACER,KAAM,OACNC,KAAM,IAAIC,KAAK,cAAcC,cAC7BC,KAAM,IACNC,cAAe,kBACfC,UAAW,CACT,CACEC,SAAU,0BACVC,OAAQ,8BAEV,CACED,SAAU,sCACVC,OAAQ,kDAId,CACER,KAAM,OACNC,KAAM,IAAIC,KAAK,cAAcC,cAC7BC,KAAM,IACNC,cAAe,sBACfC,UAAW,CACT,CACEC,SAAU,0BACVC,OAAQ,qEAEV,CACED,SAAU,sCACVC,OAAQ,8DCnCPC,EAfM,SAAAb,GAAU,IAAD,EACEc,oBAAS,GADX,mBACrBC,EADqB,KACZC,EADY,OAEFF,mBAAS,MAFP,mBAErBnC,EAFqB,KAEdsC,EAFc,OAGJH,mBAAS,MAHL,mBAGrBI,EAHqB,KAGfC,EAHe,KAY5B,OAPGJ,GACDK,YAAW,WACTpB,IAAUH,EAAoBsB,EAAQE,GAASJ,EAAS,mBACxDD,GAAW,KACV,MAGE,CAAED,UAASpC,QAAOuC,S,yCCHZI,EATO,SAAC,GAAD,IAAGZ,EAAH,EAAGA,UAAH,cACpBA,QADoB,IACpBA,OADoB,EACpBA,EAAWa,KAAI,WAAuBC,GAAvB,IAAGb,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAb,OACb,yBAAKa,IAAKD,EAAOzC,UAAWC,IAAO0C,SACjC,kBAACC,EAAA,EAAD,CAAK5C,UAAU,oBAAoB4B,GACnC,kBAACgB,EAAA,EAAD,CAAK5C,UAAU,QAAQ6B,Q,kCC+CdgB,EA7CW,SAAC,GAAyB,IAAD,EAAtBtD,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAAc,EACHsC,EAAahB,GAA7CgC,EADmC,EACzCX,KAAmBvC,EADsB,EACtBA,MAAOoC,EADe,EACfA,QAC1BZ,IAAgC,OAAX0B,QAAW,IAAXA,GAAA,UAAAA,EAAc,UAAd,eAAkB3B,SAAU,IAAjDC,iBAER,OACE,kBAAC,EAAD,CACE7B,OAAQA,EACRC,QAASA,EACTG,UAAWqC,EACXvC,YAAa,gBACbG,MAAOA,GAEP,kBAACmD,EAAA,EAAD,CACE/C,UAAS,iCAA4BC,IAAO+C,YAD9C,OAGG5B,QAHH,IAGGA,OAHH,EAGGA,EAAkBoB,KAAI,SAACS,EAAQR,GAAW,IACjCpB,EAA+C4B,EAA/C5B,KAAMC,EAAyC2B,EAAzC3B,KAAMG,EAAmCwB,EAAnCxB,KAAMC,EAA6BuB,EAA7BvB,cAAeC,EAAcsB,EAAdtB,UACzC,OACI,yBAAKe,IAAKD,EAAOzC,UAAWC,IAAOiD,iBACjC,kBAACN,EAAA,EAAD,CAAK5C,UAAU,8BACb,kBAACmD,EAAA,EAAD,CAAKC,GAAG,OAAOpD,UAAU,YACvB,yBAAKA,UAAWC,IAAOoD,WAAY5B,IAErC,kBAAC0B,EAAA,EAAD,CAAKC,GAAG,OAAOpD,UAAU,QACvB,kBAAC4C,EAAA,EAAD,CAAK5C,UAAU,oBClCV,SAAAyB,GAEvB,OADAA,EAAO6B,WAAW7B,IAEfA,EAAO,IAAY,UACnBA,EAAO,EAAU,OACjBA,EAAO,EAAU,SACjBA,EAAO,EAAU,eACb,MALW,GDgCmC8B,CAAU9B,IAC7C,kBAACmB,EAAA,EAAD,CAAK5C,UAAWC,IAAOqB,MACpBkC,IAAOlC,GAAMmC,OAAO,mBAI3B,kBAAC,EAAD,CAAe9B,UAAWA,IAC1B,kBAACiB,EAAA,EAAD,KACE,kBAACO,EAAA,EAAD,CAAKC,GAAG,OAAOpD,UAAS,4BAAuBC,IAAOyD,eACpD,kBAACd,EAAA,EAAD,CAAK5C,UAAU,oBAAoBqB,GACnC,kBAACuB,EAAA,EAAD,CAAK5C,UAAWC,IAAO0D,MAAOjC,Y,QEZnCkC,EA1BE,WAAO,IAAD,EACiB7B,oBAAS,GAD1B,mBACd8B,EADc,KACDC,EADC,KAEfC,EAAc,kBAAMD,GAAgBD,IAE1C,OACE,kBAACd,EAAA,EAAD,CAAWiB,MAAM,KAAKhE,UAAU,8BAC9B,kBAAC4C,EAAA,EAAD,CAAK5C,UAAU,0BACb,kBAACmD,EAAA,EAAD,CAAKc,GAAI,EAAGjE,UAAU,eACpB,yDAGJ,kBAAC4C,EAAA,EAAD,CAAK5C,UAAU,0BACb,kBAACmD,EAAA,EAAD,CAAKc,GAAI,EAAGjE,UAAU,eACpB,gEAGJ,kBAAC4C,EAAA,EAAD,CAAK5C,UAAU,0BACb,kBAACkE,EAAA,EAAD,CAAQ5D,QAASyD,GAAjB,eAEDF,GACC,kBAAC,EAAD,CAAmBtE,OAAQsE,EAAarE,QAASuE,M,8BC1B1C,EACF,ICkBEI,EATH,SAAAC,GAAK,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMC,EAAkBC,UAAWZ,IAChD,kBAAC,IAAD,CAAUa,GAAIF,OCFdG,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAtG,GACLkG,QAAQlG,MAAM,4CAA6CA,M,4BC3F3DuG,EAAe,CACnBC,eAAe,EACfC,cAAc,GAuBDC,EApBK,WAAmC,IAAlCV,EAAiC,uDAAzBO,EAAcI,EAAW,uCACpD,OAAQA,EAAO5C,MACb,ICVgC,uBDW9B,IAAM6C,OACeC,IAAnBF,EAAOG,SACFd,EAAMS,aACPE,EAAOG,QACb,OAAO,eAAKd,EAAZ,CAAmBS,aAAcG,IAEnC,IChBiC,wBDiB/B,IAAMG,OACeF,IAAnBF,EAAOG,SACFd,EAAMQ,cACPG,EAAOG,QACb,OAAO,eAAKd,EAAZ,CAAmBQ,cAAeO,IAEpC,QAAS,OAAOf,IExBdO,EAAe,CACnBS,QAAS,IAUIN,EAPK,WAAmC,IAAlCV,EAAiC,uDAAzBO,EAAcI,EAAW,uCACpD,OAAQA,EAAO5C,MACb,IDPuB,cCOL,OAAO,eAAKiC,EAAZ,CAAmBgB,QAASL,EAAOG,UACrD,QAAS,OAAOd,ICALiB,EALKC,0BAAgB,CAClC3E,KAAMmE,EACNS,IAAKC,I,iDCcMC,EAAsB,SAAAtH,GAAS,MAAK,CAC/CgE,KHnBkC,uBGoBlC+C,QAAS/G,I,YClBcuH,I,YAIfC,IAJK,SAAUD,KAAV,iEACb,OADa,SACPE,YJLmB,cIKID,IADhB,wCAIf,SAAUA,KAAV,uEACE,OADF,SACQE,YAAIJ,GAAoB,IADhC,OAEkB,OAFlB,SAEwBK,YAAKC,IAF7B,OAGE,OADMb,EAFR,gBAGQW,YDD8B,CACpC1D,KHVyB,cGWzB+C,QCDqBA,IAHvB,OAIE,OAJF,SAIQW,YAAIJ,GAAoB,IAJhC,wCAOA,IAAMM,GAAY,uCAAG,sBAAAC,EAAA,0FAAH,qDCTZC,GAAOC,cAEPC,GAAQC,sBAAYf,EAAagB,8BACrCC,0BAAgBL,MAGlBA,GAAKM,IAAIb,IAEMS,U,SCRAK,GAJA,I,MAAIC,GAAa,CAC9BC,IAAKC,4HAAYC,oBCMnBC,IAASC,OACP,kBAAC,IAAD,CAAgBN,OAAQA,IACtB,kBAAC,KAAD,CAAUL,MAAOA,IACf,kBAAC,EAAD,QAGJY,SAASC,eAAe,STOnB,SAAkBtD,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsD,IAAIN,YAAwBvD,OAAOC,SAAS6D,MACpDC,SAAW/D,OAAOC,SAAS8D,OAIvC,OAGF/D,OAAOgE,iBAAiB,QAAQ,WAC9B,IAAM3D,EAAK,UAAMkD,YAAN,sBAEPzD,IAgEV,SAAiCO,EAAOC,GAEtC2D,MAAM5D,EAAO,CACX6D,QAAS,CAAE,iBAAkB,YAE5BxD,MAAK,SAAAyD,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChE,UAAUC,cAAcgE,MAAM9D,MAAK,SAAAC,GACjCA,EAAa8D,aAAa/D,MAAK,WAC7BV,OAAOC,SAASyE,eAKpBtE,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAwD,CAAwBtE,EAAOC,GAI/BC,UAAUC,cAAcgE,MAAM9D,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OShC/BE,K","file":"static/js/main.a35c7276.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__RD8oA\",\"date\":\"styles_date__2E28i\",\"rateBlock\":\"styles_rateBlock__3ikSq\",\"reviewContainer\":\"styles_reviewContainer__2Ofxc\",\"type\":\"styles_type__3bD-f\",\"guestSection\":\"styles_guestSection__-xOGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__3Dta3\",\"cross\":\"styles_cross__2cw8A\",\"modalBody\":\"styles_modalBody__3QI5j\",\"modalHeader\":\"styles_modalHeader__10XDF\",\"modal-content\":\"styles_modal-content__AFeYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__1AAmO\"};","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport styles from \"./styles.module.scss\";\nimport { X } from \"react-bootstrap-icons\";\n\nconst ModalWindow = ({\n  isOpen = false,\n  onClose = () => {},\n  headerTitle, children, isLoading, error,\n}) => (\n  <Modal\n    show={isOpen}\n    onHide={onClose}\n    className={`modal-dialog modal-dialog-centered ${styles.modal}`}\n  >\n    <div className={styles.wrapper}>\n      <X className={styles.cross} size={20} onClick={onClose}/>\n      {headerTitle && \n        <Modal.Header className={`font-weight-bold ${styles.modalHeader}`}>\n          {headerTitle}\n        </Modal.Header>\n      }\n      <Modal.Body className={styles.modalBody}>\n        {isLoading\n          ? <Spinner animation=\"border\" variant=\"primary\"/>\n          : !!error\n        ? <p className=\"p-2\">Error: can't load data ({error})</p>\n            : children\n        }\n      </Modal.Body>\n    </div>\n  </Modal>\n);\n\nexport default ModalWindow;\nexport { X, Spinner, Modal };\n","import gql from 'graphql-tag';\n\nexport const GET_GUEST_REVIEWS = gql`\n  query getGuestReviewsQuery {\n    guestReviewsList {\n      name\n      date\n      rate\n      questions\n      travelingType\n    }\n  }\n`;\n  ","import { GET_GUEST_REVIEWS } from '../components/GuestReviewsPopup/api/queries';\n\nexport default [\n  {\n    request: {\n      query: GET_GUEST_REVIEWS,\n      variables: {},\n    },\n    result: {\n      guestReviewsList: [\n        {\n          name: \"John\",\n          date: new Date(\"2020-04-28\").toISOString(),\n          rate: 8.8,\n          travelingType: \"Traveling Alone\",\n          questions: [\n            {\n              question: \"What did you like most?\",\n              answer: \"Character, history, lobby\",\n            },\n            {\n              question: \"Was there anythind you didn't like?\",\n              answer: \"There were wery loud neighbors\"\n            },\n          ],\n        },\n        {\n          name: \"Mary\",\n          date: new Date(\"2020-04-17\").toISOString(),\n          rate: 9.3,\n          travelingType: \"Traveling Alone\",\n          questions: [\n            {\n              question: \"What did you like most?\",\n              answer: \"Wonderful view, tasty food\",\n            },\n            {\n              question: \"Was there anythind you didn't like?\",\n              answer: \"There was't any parking, I can't take a car!\"\n            },\n          ],\n        },\n        {\n          name: \"John\",\n          date: new Date(\"2020-03-15\").toISOString(),\n          rate: 7.6,\n          travelingType: \"Traveling as Couple\",\n          questions: [\n            {\n              question: \"What did you like most?\",\n              answer: \"Concert was amazing, people are the most friendly I've ever seen!\",\n            },\n            {\n              question: \"Was there anythind you didn't like?\",\n              answer: \"Quite dirty streets and no choise in the supermarket\"\n            },\n          ],\n        },\n      ],\n    },\n  },\n];\n","import { useState } from \"react\";\nimport mocks from \"gql/mocks\";\nimport { GET_GUEST_REVIEWS } from \"components/GuestReviewsPopup/api/queries\";\n\nconst useFakeQuery = query => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n\n  if(loading) {\n    setTimeout(() => {\n      query === GET_GUEST_REVIEWS ? setData(mocks) : setError(\"Incorrect query\");\n      setLoading(false);\n    }, 1500);\n  }\n\n  return { loading, error, data };\n}\n\nexport default useFakeQuery;\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport styles from \"./styles.module.scss\";\n\nconst QuestionsList = ({ questions }) => (\n  questions?.map(({ question, answer }, index) => (\n    <div key={index} className={styles.section}>\n      <Row className=\"font-weight-bold\">{question}</Row>\n      <Row className=\"mb-2\">{answer}</Row>\n    </div>\n  ))\n);\n\nexport default QuestionsList;\n","import React from \"react\";\nimport { ModalWindow } from \"components/common\";\nimport useFakeQuery from \"hooks/useFakeQuery\";\nimport { GET_GUEST_REVIEWS } from \"./api/queries\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { QuestionsList } from \"./components\";\nimport { getRating } from \"./helpers\";\nimport styles from \"./styles.module.scss\";\nimport moment from \"moment\";\n\nconst GuestReviewsPopup = ({ isOpen, onClose }) => {\n  const { data: dataReviews, error, loading } = useFakeQuery(GET_GUEST_REVIEWS);\n  const { guestReviewsList } = dataReviews?.[0]?.result || {};\n\n  return (\n    <ModalWindow\n      isOpen={isOpen}\n      onClose={onClose}\n      isLoading={loading}\n      headerTitle={\"GUEST REVIEWS\"}\n      error={error}\n    >\n      <Container\n        className={`justify-content-center ${styles.container}`}\n      >\n        {guestReviewsList?.map((review, index) => {\n          const { name, date, rate, travelingType, questions } = review;\n          return (\n              <div key={index} className={styles.reviewContainer}>\n                <Row className=\"my-3 justify-content-start\">\n                  <Col xs=\"auto\" className=\"m-0 px-0\">\n                    <div className={styles.rateBlock}>{rate}</div>\n                  </Col>\n                  <Col xs=\"auto\" className=\"ml-0\">\n                    <Row className=\"font-weight-bold\">{getRating(rate)}</Row>\n                    <Row className={styles.date}>\n                      {moment(date).format(\"MMM DD, YYYY\")}\n                    </Row>\n                  </Col>\n                </Row>\n                <QuestionsList questions={questions} />\n                <Row>\n                  <Col xs=\"auto\" className={`m-0 p-0 pt-2 pb-3 ${styles.guestSection}`}>\n                    <Row className=\"font-weight-bold\">{name}</Row>\n                    <Row className={styles.type}>{travelingType}</Row>\n                  </Col>\n                </Row>\n              </div>\n          )\n        })}\n      </Container>\n    </ModalWindow>\n  );\n};\n\nexport default GuestReviewsPopup;\nexport { ModalWindow, QuestionsList, useFakeQuery };\n","export const getRating = rate => {\n  rate = parseFloat(rate);\n  if (!rate) return \"\";\n  if(rate > 8.5) return \"Perfect\";\n  if(rate > 7) return \"Good\";\n  if(rate > 5) return \"Normal\";\n  if(rate > 3) return \"Satisfactory\";\n  return \"Bad\";\n};\n","import React, {useState} from 'react';\nimport { GuestReviewsPopup } from \"components\";\nimport {\n  Button, Container, Row, Col,\n} from \"react-bootstrap\";\n\nconst MainPage = () => {\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const togglePopup = () => setIsPopupOpen(!isPopupOpen);\n\n  return (\n    <Container fluid=\"md\" className=\"justify-content-center p-3\">\n      <Row className=\"justify-content-center\">\n        <Col md={5} className=\"text-center\">\n          <h2>Welcome to reviews page</h2>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col md={5} className=\"text-center\">\n          <p>You can read guest reviews here</p>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Button onClick={togglePopup}>Show popup</Button>\n      </Row>\n      {isPopupOpen && \n        <GuestReviewsPopup isOpen={isPopupOpen} onClose={togglePopup}/>\n      }\n    </Container>\n  );\n};\n\nexport default MainPage;\nexport { GuestReviewsPopup, Button };\n","export default {\n  MAIN_PAGE: \"/\",\n};","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'styles/index.css';\nimport { MainPage } from \"components\";\nimport {\n  HashRouter as Router,\n  Route, Switch, Redirect,\n} from \"react-router-dom\";\nimport routes from \"./routes\";\n\nconst App = props => (\n  <Router>\n    <Switch>\n      <Route exact path={routes.MAIN_PAGE} component={MainPage} />\n      <Redirect to={routes.MAIN_PAGE} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  TOGGLE_REVIEWS_POPUP,\n  TOGGLE_REVIEWS_LOADER,\n} from \"./types\";\n\nconst initialState = {\n  reviewsLoader: false,\n  reviewsPopup: false,\n}\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_REVIEWS_POPUP:\n      const isPopup = \n        action.payload === undefined\n          ? !state.reviewsPopup\n          : action.payload\n      return { ...state, reviewsPopup: isPopup };\n\n    case TOGGLE_REVIEWS_LOADER:\n      const isLoader = \n        action.payload === undefined\n          ? !state.reviewsLoader\n          : action.payload\n      return { ...state, reviewsLoader: isLoader };\n\n    default: return state;\n  }\n};\n\nexport default dataReducer;\n","export const GET_REVIEWS = \"GET_REVIEWS\";\nexport const SET_REVIEWS = \"GET_REVIEWS\";\nexport const TOGGLE_REVIEWS_POPUP = \"TOGGLE_REVIEWS_POPUP\";\nexport const TOGGLE_REVIEWS_LOADER = \"TOGGLE_REVIEWS_LOADER\";\n","import { SET_REVIEWS } from \"./types\";\n\nconst initialState = {\n  reviews: [],\n}\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_REVIEWS: return { ...state, reviews: action.payload }; \n    default: return state;\n  }\n};\n\nexport default dataReducer;\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\nimport dataReducer from \"./dataReducer\";\n\nconst rootReducer = combineReducers({\n  data: dataReducer,\n  app: appReducer,\n})\n\nexport default rootReducer;\n","import {\n  GET_REVIEWS,\n  SET_REVIEWS,\n  TOGGLE_REVIEWS_POPUP,\n} from \"./types\";\n\nexport const getReviews = () => ({\n  type: GET_REVIEWS,\n});\n\nexport const setReviews = reviews => ({\n  type: SET_REVIEWS,\n  payload: reviews,\n});\n\nexport const toggleReviewsPopup = isOpen => ({\n  type: TOGGLE_REVIEWS_POPUP,\n  payload: isOpen,\n});\n\nexport const toggleReviewsLoader = isLoading => ({\n  type: TOGGLE_REVIEWS_POPUP,\n  payload: isLoading,\n});\n","import { takeEvery, put, call } from \"redux-saga/effects\"\nimport { GET_REVIEWS } from \"./types\";\nimport { toggleReviewsLoader, setReviews } from \"./actions\";\n\nexport default function* sagaWatcher() {\n  yield takeEvery(GET_REVIEWS, sagaWorker);\n};\n\nfunction* sagaWorker() {\n  yield put(toggleReviewsLoader(true));\n  const payload = yield call(fetchReviews);\n  yield put(setReviews(payload));\n  yield put(toggleReviewsLoader(false));\n}\n\nconst fetchReviews = async () => {\n\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagaWatcher from \"./sagas\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(saga)\n));\n\nsaga.run(sagaWatcher);\n\nexport default store;\n","import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: process.env.APOLLO_CLIENT_URI,\n});\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport * as serviceWorker from './services/serviceWorker';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport store from \"./redux/store\"\nimport { Provider } from \"react-redux\";\nimport client from \"./gql/client\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}